{
	"name": "example_practice_case_1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CSV_ADLS_roihaan_MoviesADLS",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "window1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movie as string,",
				"          title as string,",
				"          genres as string,",
				"          year as string,",
				"          Rating as string,",
				"          {Rotton Tomato} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          movie,",
				"          title,",
				"          genres,",
				"          year,",
				"          Rating,",
				"          {Rotten Tomato} = {Rotton Tomato}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 filter(toInteger(year) > 1950) ~> filter1",
				"filter1 derive(PrimaryGenre = iif(locate('|', genres)>1,left(genres,locate('|',genres)-1),genres)) ~> derivedColumn1",
				"derivedColumn1 window(over(PrimaryGenre,",
				"          year),",
				"     desc({Rotten Tomato}, true),",
				"     rank = rank()) ~> window1",
				"window1 aggregate(groupBy(PrimaryGenre,",
				"          year),",
				"     AverageRating = avg(toInteger({Rotten Tomato})),",
				"          HighestRating = first(title),",
				"          LowestRating = last(title),",
				"          Count = count()) ~> aggregate1",
				"aggregate1 alterRow(updateIf(true())) ~> alterRow1"
			]
		}
	}
}