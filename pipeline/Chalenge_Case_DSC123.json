{
	"name": "Chalenge_Case_DSC123",
	"properties": {
		"activities": [
			{
				"name": "SCD_Type1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "WITH NumberEmployee AS (\n    SELECT *,\n        ROW_NUMBER() OVER (PARTITION BY EmployeeID ORDER BY EndDate DESC) AS RowNum\n    FROM Employee\n)\nSELECT \n    EmployeeID,\n    Name,\n    Position,\n    StartDate,\n    EndDate\nFROM NumberEmployee \nWHERE RowNum = 1;",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlServerSink",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": [
								"EmployeeID"
							]
						},
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SQL_ChallengeSCD",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SQL_roihaan",
						"type": "DatasetReference",
						"parameters": {
							"schema_name": "dbo",
							"table_name": "user"
						}
					}
				]
			},
			{
				"name": "SCD_Type2",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "WITH NumberEmployee AS (\n    SELECT *, \n           ROW_NUMBER() OVER (PARTITION BY EmployeeID ORDER BY EndDate DESC) AS RowNum\n    FROM Employee\n) \nSELECT \n    EmployeeLogID,\n    EmployeeID,\n    Name,\n    Position,\n    StartDate,\n    EndDate,\n    CAST(CASE WHEN RowNum = 1 THEN 1 ELSE 0 END AS BIT) AS isLatest\nFROM NumberEmployee \nORDER BY EmployeeLogID ASC;\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlServerSink",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": [
								"EmployeeID"
							]
						},
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SQL_ChallengeSCD",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SQL_roihaan",
						"type": "DatasetReference",
						"parameters": {
							"schema_name": "dbo",
							"table_name": "user_log"
						}
					}
				]
			},
			{
				"name": "SCD_Type3",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "WITH NumberEmployee AS (\n    SELECT *,\n           ROW_NUMBER() OVER (PARTITION BY EmployeeID ORDER BY EndDate DESC) AS RowNum\n    FROM Employee\n),\nFirstPosition AS (\n    SELECT EmployeeID, Position AS PreviousPosition, StartDate\n    FROM (\n        SELECT EmployeeID, Position, StartDate, \n               ROW_NUMBER() OVER (PARTITION BY EmployeeID ORDER BY EndDate ASC) AS RowNum\n        FROM Employee\n    ) tri\n    WHERE tri.RowNum = 1\n)\nSELECT  \n    ne.EmployeeID, \n    ne.Name, \n    ne.Position, \n    fp.PreviousPosition, \n    ne.StartDate, \n    ne.EndDate\nFROM NumberEmployee ne\nLEFT JOIN FirstPosition fp ON ne.EmployeeID = fp.EmployeeID\nWHERE ne.RowNum = 1;\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlServerSink",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": [
								"EmployeeID"
							]
						},
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SQL_ChallengeSCD",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SQL_roihaan",
						"type": "DatasetReference",
						"parameters": {
							"schema_name": "dbo",
							"table_name": "user_historical"
						}
					}
				]
			}
		],
		"annotations": []
	}
}